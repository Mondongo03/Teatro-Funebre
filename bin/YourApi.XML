<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Proyecto Final</name>
    </assembly>
    <members>
        <member name="T:GameData">
            <summary>
            Clase que nos permite controlar los datos del juego como los ajustes de pantalla y de sonido
            </summary>
        </member>
        <member name="F:GameData.windowResolutions">
            <summary>
            Windowed Resolution Presets, Only Come into Effect when ScreenMode is Windowed.
            Godot does not change the resolution of the monitor when it goes FullScreen, it uses the resolution as-is. 
            </summary>
        </member>
        <member name="T:Main">
            <summary>
            Primera clase del proyecto que nos permite gestionar la primera escena al completo, como instanciar los objetos en ella
            </summary>
        </member>
        <member name="M:Main._Ready">
            <summary>
            Esta función se llama automáticamente cuando se instancia el objeto al cual está asociado el script
            </summary>
        </member>
        <member name="M:Main._Process(System.Double)">
            <summary>
            Este método está siempre en ejecución mientras el objeto que tiene asociado el script esté en pantalla
            </summary>
            <param name="delta">Es una variable generada por Godot que almacena la posición del objeto</param>
        </member>
        <member name="M:Main.InstanciarEscena">
            <summary>
            Método que instancia todos los elementos de la escena y los añade a su respectivo padre
            </summary>
        </member>
        <member name="M:Main.instanciarYAgregarNodo(System.String,Godot.Node2D@)">
            <summary>
            Método que instancia un nodo y lo agrega al árbol de escenas
            </summary>
            <param name="rutaEscena">Ruta de la escena a instanciar</param>
            <param name="node2D">Referencia al nodo instanciado</param>
        </member>
        <member name="M:Main.popPista_1">
            <summary>
            Método que gestiona las pistas de la escena
            </summary>
        </member>
        <member name="M:Main._on_timer_timeout">
            <summary>
            Señal de Godot que nos permite poner un contador y cuando llega a cero hace las acciones específicas
            </summary>
        </member>
        <member name="T:Audio">
            <summary>
            Esta clase es para getionar el efecto de sonido de la primera escena
            </summary>
        </member>
        <member name="M:Audio._Ready">
            <summary>
            Esta funcion se llama automaticamente cuando se instancia el objeto al cual esta asociado el script
            </summary>
        </member>
        <member name="M:Audio._Process(System.Double)">
            <summary>
            Este metodo esta siempre en ejecucion mientras el objeto que tiene asociado el script este en pantalla
            </summary>
            <param name="delta">Es una varibale generada por Godot que almacena la posicion del objeto</param>
        </member>
        <member name="T:Cajetilla">
            <summary>
            Clase que gestiona el Objeto cajetilla de la escena 1
            </summary>
        </member>
        <member name="M:Cajetilla._on_input_event(Godot.Node,Godot.InputEvent,System.Int32)">
            <summary>
            Este metodo es una señal del propio godot que nos permite detectar cuando haces click sobre le objeto
            </summary>
            <param name="viewport">Nodo del objeto parte de la API</param>
            <param name="evento">Nos permite detectar cuando se hace click</param>
            <param name="shap">Variable que se utiliza para la API</param>
        </member>
        <member name="T:Cajon">
            <summary>
            Clase que nos permite gestionar el cajon de la primera escena
            </summary>
        </member>
        <member name="M:Cajon._on_input_event(Godot.Node,Godot.InputEvent,System.Int32)">
            <summary>
            Este metodo es una señal del propio godot que nos permite detectar cuando haces click sobre le objeto
            </summary>
            <param name="viewport">Nodo del objeto parte de la API</param>
            <param name="evento">Nos permite detectar cuando se hace click</param>
            <param name="shap">Variable que se utiliza para la API</param>
        </member>
        <member name="M:Cajon.GetZoom">
            <summary>
            Getter de la variable zooom
            </summary>
            <returns>Devuelve la variable zooom</returns>
        </member>
        <member name="M:Cajon.SetZoom(System.Boolean)">
            <summary>
            Setter de la variable zooom
            </summary>
            <param name="value">Cambio de la variable zooom</param>
        </member>
        <member name="T:cajonZoomeado">
            <summary>
            Clase que nos permite gestionar como funciona el cajon cuando salta en pantalla completa
            </summary>
        </member>
        <member name="M:cajonZoomeado._on_input_event(Godot.Node,Godot.InputEvent,System.Int32)">
            <summary>
            Este metodo es una señal del propio godot que nos permite detectar cuando haces click sobre le objeto
            </summary>
            <param name="viewport">Nodo del objeto parte de la API</param>
            <param name="evento">Nos permite detectar cuando se hace click</param>
            <param name="shap">Variable que se utiliza para la API</param>
        </member>
        <member name="T:Despertarse">
            <summary>
            Clase que nos permite gestionar cuando el Gnomo se movera y hacia que direccion
            </summary>
        </member>
        <member name="M:Despertarse._Process(System.Double)">
            <summary>
            Este metodo esta siempre en ejecucion mientras el objeto que tiene asociado el script este en pantalla
            </summary>
            <param name="delta">Es una varibale generada por Godot que almacena la posicion del objeto</param>
        </member>
        <member name="M:Despertarse.despertar(System.Boolean)">
            <summary>
            Metodo que nos permite cambiar el booleano funciona
            </summary>
            <param name="boolean">Booleano de entrada que cambiara funciona</param>
        </member>
        <member name="T:Escalera">
            <summary>
            Clase que nos permite gestionar el objeto escalera
            </summary>
        </member>
        <member name="M:Escalera._Ready">
            <summary>
            Esta funcion se llama automaticamente cuando se instancia el objeto al cual esta asociado el script
            </summary>
        </member>
        <member name="M:Escalera._Process(System.Double)">
            <summary>
            Este metodo esta siempre en ejecucion mientras el objeto que tiene asociado el script este en pantalla
            </summary>
            <param name="delta">Es una varibale generada por Godot que almacena la posicion del objeto</param>
        </member>
        <member name="M:Escalera._on_input_event(Godot.Node,Godot.InputEvent,System.Int32)">
            <summary>
            Este metodo es una señal del propio godot que nos permite detectar cuando haces click sobre le objeto
            </summary>
            <param name="viewport">Nodo del objeto parte de la API</param>
            <param name="evento">Nos permite detectar cuando se hace click</param>
            <param name="shap">Variable que se utiliza para la API</param>
        </member>
        <member name="T:Flecha">
            <summary>
            Clase que nos permite gestionar la flecha que aparece y nos permite subir al desban en la primera escena
            </summary>
        </member>
        <member name="M:Flecha._on_input_event(Godot.Node,Godot.InputEvent,System.Int32)">
            <summary>
            Este metodo es una señal del propio godot que nos permite detectar cuando haces click sobre le objeto
            </summary>
            <param name="viewport">Nodo del objeto parte de la API</param>
            <param name="evento">Nos permite detectar cuando se hace click</param>
            <param name="shap">Variable que se utiliza para la API</param>
        </member>
        <member name="T:InteractuarCon">
            <summary>
            Esta clase es la clase que se utiliza para detectar cuando entra y sale un objeto de una area especifica
            </summary>
        </member>
        <member name="F:InteractuarCon.despertarse">
            <summary>
            Instanciacio de la clase Despertarse
            </summary>
        </member>
        <member name="M:InteractuarCon._Process(System.Double)">
            <summary>
            Este metodo esta siempre en ejecucion mientras el objeto que tiene asociado el script este en pantalla
            </summary>
            <param name="delta">Es una varibale generada por Godot que almacena la posicion del objeto</param>
        </member>
        <member name="M:InteractuarCon._on_hueco_area_entered(Godot.Area2D)">
            <summary>
            Metodo que nos permite ejecutar codigo cuando algo entra en el area, este metodo es una señal de godot
            </summary>
            <param name="area">Es la variable que nos dice el donde a entrado un objeto</param>
        </member>
        <member name="T:Lampara">
            <summary>
            Script que nos permite gestionar como funciona la lampara de la primera escena
            </summary>
        </member>
        <member name="M:Lampara._on_input_event(Godot.Node,Godot.InputEvent,System.Int32)">
            <summary>
            Este metodo es una señal del propio godot que nos permite detectar cuando haces click sobre le objeto
            </summary>
            <param name="viewport">Nodo del objeto parte de la API</param>
            <param name="evento">Nos permite detectar cuando se hace click</param>
            <param name="shap">Variable que se utiliza para la API</param>
        </member>
        <member name="T:Monstruo">
            <summary>
            Clase que gestiona el pequeño monstruo que hay debajo de la cama del Gnomo
            </summary>
        </member>
        <member name="M:Monstruo._Ready">
            <summary>
            Esta funcion se llama automaticamente cuando se instancia el objeto al cual esta asociado el script
            </summary>
        </member>
        <member name="M:Monstruo._on_input_event(Godot.Node,Godot.InputEvent,System.Int32)">
            <summary>
            Este metodo es una señal del propio godot que nos permite detectar cuando haces click sobre le objeto
            </summary>
            <param name="viewport">Nodo del objeto parte de la API</param>
            <param name="evento">Nos permite detectar cuando se hace click</param>
            <param name="shap">Variable que se utiliza para la API</param>
        </member>
        <member name="T:Poster">
            <summary>
            Clase que gestiona las fisicas del poster para que haga su interaccion
            </summary>
        </member>
        <member name="M:Poster._Ready">
            <summary>
            Esta funcion se llama automaticamente cuando se instancia el objeto al cual esta asociado el script
            </summary>
        </member>
        <member name="M:Poster._on_input_event(Godot.Node,Godot.InputEvent,System.Int32)">
            <summary>
            Este metodo es una señal del propio godot que nos permite detectar cuando haces click sobre le objeto
            </summary>
            <param name="viewport">Nodo del objeto parte de la API</param>
            <param name="evento">Nos permite detectar cuando se hace click</param>
            <param name="shap">Variable que se utiliza para la API</param>
        </member>
        <member name="T:Reloj">
            <summary>
            Clase que nos permite gestionar cómo funciona el Reloj y que pueda almacenar objetos dentro del mismo
            </summary>
        </member>
        <member name="M:Reloj._Process(System.Double)">
            <summary>
            Este metodo esta siempre en ejecucion mientras el objeto que tiene asociado el script este en pantalla
            </summary>
            <param name="delta">Es una varibale generada por Godot que almacena la posicion del objeto</param>
        </member>
        <member name="M:Reloj._on_reloj_entered(Godot.CollisionObject2D)">
            <summary>
            Señal de godot que nos permite comprobar si la colision de un objeto colisiona contra otro objeto
            </summary>
            <param name="collisionObject2D">Variable de la colision del objeto que colisiona con el objeto</param>
        </member>
        <member name="M:Reloj._on_input_event(Godot.Node,Godot.InputEvent,System.Int32)">
            <summary>
            Este metodo es una señal del propio godot que nos permite detectar cuando haces click sobre le objeto
            </summary>
            <param name="viewport">Nodo del objeto parte de la API</param>
            <param name="evento">Nos permite detectar cuando se hace click</param>
            <param name="shap">Variable que se utiliza para la API</param>
        </member>
        <member name="M:Reloj.InstanciarYAgregarNodo(System.String,Godot.Vector2I,System.Int32,Godot.Node2D@)">
            <summary>
            Método que instancia un nodo y lo agrega al árbol de escenas
            </summary>
            <param name="rutaEscena">Ruta de la escena a instanciar</param>
            <param name="posicion">Referencia a la posicion deseada al instanciar el nodo</param>
            <param name="zIndex">Referencia al indice deseado en el nodo</param>
            <param name="node2D">Referencia al nodo instanciado</param>
        </member>
        <member name="M:Reloj.InstanciarYAgregarNodo(System.String,System.Int32,Godot.Node2D@)">
            <summary>
            Método que instancia un nodo y lo agrega al árbol de escenas
            </summary>
            <param name="rutaEscena">Ruta de la escena a instanciar</param>
            <param name="zIndex">Referencia al indice deseado en el nodo</param>
            <param name="node2D">Referencia al nodo instanciado</param>
        </member>
        <member name="M:Reloj.InstanciarYAgregarNodo(System.String,Godot.Node2D@)">
            <summary>
            Método que instancia un nodo y lo agrega al árbol de escenas
            </summary>
            <param name="rutaEscena">Ruta de la escena a instanciar</param>
            <param name="node2D">Referencia al nodo instanciado</param>
        </member>
        <member name="M:Reloj.GetZoom">
            <summary>
            Getter de zooom
            </summary>
            <returns>devuelve la varibale de la clase zooom</returns>
        </member>
        <member name="M:Reloj.SetZoom(System.Boolean)">
            <summary>
            Setter de zooom
            </summary>
            <param name="value">El valor que queremos darle a zooom</param>
        </member>
        <member name="T:RelojZoomeado">
            <summary>
            Clase que nos permite gestionar al reloj en zooom
            </summary>
        </member>
        <member name="M:RelojZoomeado._Ready">
            <summary>
            Esta funcion se llama automaticamente cuando se instancia el objeto al cual esta asociado el script
            </summary>
        </member>
        <member name="M:RelojZoomeado._on_input_event(Godot.Node,Godot.InputEvent,System.Int32)">
            <summary>
            Este metodo es una señal del propio godot que nos permite detectar cuando haces click sobre le objeto
            </summary>
            <param name="viewport">Nodo del objeto parte de la API</param>
            <param name="evento">Nos permite detectar cuando se hace click</param>
            <param name="shap">Variable que se utiliza para la API</param>
        </member>
        <member name="T:VarillaM">
            <summary>
            Clase que nos perimte gestionar la varilla mas grande para saber cuando esta en el reloj y hacer su movimiento
            </summary>
        </member>
        <member name="M:VarillaM._Process(System.Double)">
            <summary>
            Este metodo esta siempre en ejecucion mientras el objeto que tiene asociado el script este en pantalla
            </summary>
            <param name="delta">Es una varibale generada por Godot que almacena la posicion del objeto</param>
        </member>
        <member name="M:VarillaM._on_input_event(Godot.Node,Godot.InputEvent,System.Int32)">
            <summary>
            Este metodo es una señal del propio godot que nos permite detectar cuando haces click sobre le objeto
            </summary>
            <param name="viewport">Nodo del objeto parte de la API</param>
            <param name="evento">Nos permite detectar cuando se hace click</param>
            <param name="shap">Variable que se utiliza para la API</param>
        </member>
        <member name="M:VarillaM.devolverClickado">
            <summary>
            Getter de encontrar
            </summary>
            <returns>Devuelve la variable encontrar</returns>
        </member>
        <member name="T:VarillaS">
            <summary>
            Clase que nos perimte gestionar la varilla mas pequeña para saber cuando esta en el reloj y hacer su movimiento
            </summary>
        </member>
        <member name="M:VarillaS._Process(System.Double)">
            <summary>
            Este metodo esta siempre en ejecucion mientras el objeto que tiene asociado el script este en pantalla
            </summary>
            <param name="delta">Es una varibale generada por Godot que almacena la posicion del objeto</param>
        </member>
        <member name="M:VarillaS._on_input_event(Godot.Node,Godot.InputEvent,System.Int32)">
            <summary>
            Este metodo es una señal del propio godot que nos permite detectar cuando haces click sobre le objeto
            </summary>
            <param name="viewport">Nodo del objeto parte de la API</param>
            <param name="evento">Nos permite detectar cuando se hace click</param>
            <param name="shap">Variable que se utiliza para la API</param>
        </member>
        <member name="M:VarillaS.devolverClickado">
            <summary>
            Getter de encontrado
            </summary>
            <returns>Devuleve encontrado</returns>
        </member>
        <member name="M:VarillaS.rotar">
            <summary>
            Metodo que nos permite girar las abujas del reloj cuando este esta en pantalla grande
            </summary>
        </member>
        <member name="M:VarillaS.GetClickado">
            <summary>
            Getter de encontrado pero estatico
            </summary>
            <returns>Devuleve encontrado</returns>
        </member>
        <member name="T:Ventana">
            <summary>
            Clase que nos permite gestinar como funciona la logica de la ventana en la escena 1
            </summary>
        </member>
        <member name="M:Ventana._on_input_event(Godot.Node,Godot.InputEvent,System.Int32)">
            <summary>
            Este metodo es una señal del propio godot que nos permite detectar cuando haces click sobre le objeto
            </summary>
            <param name="viewport">Nodo del objeto parte de la API</param>
            <param name="evento">Nos permite detectar cuando se hace click</param>
            <param name="shap">Variable que se utiliza para la API</param>
        </member>
        <member name="T:escena2">
            <summary>
            Clase que nos permite gestionar todo lo que ocurre en la segunda escena
            </summary>
        </member>
        <member name="M:escena2._Ready">
            <summary>
            Esta funcion se llama automaticamente cuando se instancia el objeto al cual esta asociado el script
            </summary>
        </member>
        <member name="M:escena2._Process(System.Double)">
            <summary>
            Este metodo esta siempre en ejecucion mientras el objeto que tiene asociado el script este en pantalla
            </summary>
            <param name="delta">Es una varibale generada por Godot que almacena la posicion del objeto</param>
        </member>
        <member name="T:MoverPrueba">
            <summary>
            Clase que gestiona los objetos que se pueden iteractuar de la segunda escena
            </summary>
        </member>
        <member name="M:MoverPrueba._Process(System.Double)">
            <summary>
            Este metodo esta siempre en ejecucion mientras el objeto que tiene asociado el script este en pantalla
            </summary>
            <param name="delta">Es una varibale generada por Godot que almacena la posicion del objeto</param>
        </member>
        <member name="M:MoverPrueba._on_input_event(Godot.Node,Godot.InputEvent,System.Int32)">
            <summary>
            Este metodo es una señal del propio godot que nos permite detectar cuando haces click sobre le objeto
            </summary>
            <param name="viewport">Nodo del objeto parte de la API</param>
            <param name="evento">Nos permite detectar cuando se hace click</param>
            <param name="shap">Variable que se utiliza para la API</param>
        </member>
        <member name="T:MueveTeEnElBosque">
            <summary>
            Script que nos permite gestionar el movimiento de gnomo en el boque
            </summary>
        </member>
        <member name="M:MueveTeEnElBosque._Ready">
            <summary>
            Esta funcion se llama automaticamente cuando se instancia el objeto al cual esta asociado el script
            </summary>
        </member>
        <member name="M:MueveTeEnElBosque._Process(System.Double)">
            <summary>
            Este metodo esta siempre en ejecucion mientras el objeto que tiene asociado el script este en pantalla
            </summary>
            <param name="delta">Es una varibale generada por Godot que almacena la posicion del objeto</param>
        </member>
        <member name="M:MueveTeEnElBosque._on_area_2d_area_entered(Godot.CollisionObject2D)">
            <summary>
            Señal de godot que nos permite comprobar si la colision de un objeto colisiona contra otro objeto
            </summary>
            <param name="collisionObject2D">Variable de la colision del objeto que colisiona con el objeto</param>
        </member>
        <member name="T:Ojo">
            <summary>
            Clase que nos permite gestionar como funciona el ojo del gnomo
            </summary>
        </member>
        <member name="M:Ojo._Ready">
            <summary>
            Esta funcion se llama automaticamente cuando se instancia el objeto al cual esta asociado el script
            </summary>
        </member>
        <member name="M:Ojo._Process(System.Double)">
            <summary>
            Señal de godot que nos permite saber cuando el raton entra en el area de un objeto
            </summary>
        </member>
        <member name="M:Ojo._on_input_event(Godot.Node,Godot.InputEvent,System.Int64)">
            <summary>
            Este metodo es una señal del propio godot que nos permite detectar cuando haces click sobre le objeto
            </summary>
            <param name="viewport">Nodo del objeto parte de la API</param>
            <param name="event">Nos permite detectar cuando se hace click</param>
            <param name="shape_idx">Variable que se utiliza para la API</param>
        </member>
        <member name="M:Ojo._on_area_entered(Godot.CollisionObject2D)">
            <summary>
            Señal de godot que nos permite comprobar si la colision de un objeto colisiona contra otro objeto
            </summary>
            <param name="collisionObject2D">Variable de la colision del objeto que colisiona con el objeto</param>
        </member>
        <member name="M:Ojo._on_area_exited(Godot.CollisionObject2D)">
            <summary>
            Señal de godot que nos permite comprobar si la colision de un objeto deja de colisionar contra otro objeto
            </summary>
            <param name="collisionObject2D">Variable de la colision del objeto que colisiona con el objeto</param>
        </member>
        <member name="T:Ramon">
            <summary>
            Clase que nos permite gestionar al personaje segundario de Ramon
            </summary>
        </member>
        <member name="M:Ramon._Process(System.Double)">
            <summary>
            Este metodo esta siempre en ejecucion mientras el objeto que tiene asociado el script este en pantalla
            </summary>
            <param name="delta">Es una varibale generada por Godot que almacena la posicion del objeto</param>
        </member>
        <member name="M:Ramon._on_input_event(Godot.Node,Godot.InputEvent,System.Int64)">
            <summary>
            Este metodo es una señal del propio godot que nos permite detectar cuando haces click sobre le objeto
            </summary>
            <param name="viewport">Nodo del objeto parte de la API</param>
            <param name="event">Nos permite detectar cuando se hace click</param>
            <param name="shape_idx">Variable que se utiliza para la API</param>
        </member>
        <member name="M:Ramon.mostrarTexto(Godot.PackedScene,System.String)">
            <summary>
            Metodo que nos permite gestionar los textos de Ramon
            </summary>
            <param name="escena">Paquete de la escena para que podamos añadirla</param>
            <param name="ruta">Ruta de la escena con el texto</param>
        </member>
        <member name="M:Ramon._on_area_entered(Godot.CollisionObject2D)">
            <summary>
            Señal de godot que nos permite comprobar si la colision de un objeto colisiona contra otro objeto
            </summary>
            <param name="collisionObject2D">Variable de la colision del objeto que colisiona con el objeto</param>
        </member>
        <member name="M:Ramon._on_area_exited(Godot.CollisionObject2D)">
            <summary>
            Señal de godot que nos permite comprobar si la colision de un objeto deja de  colisionar contra otro objeto
            </summary>
            <param name="collisionObject2D">Variable de la colision del objeto que colisiona con el objeto</param>
        </member>
        <member name="T:RespuestasRamon">
            <summary>
            Clase que nos permite gestionar las respuesta que da el jugador a Ramon
            </summary>
        </member>
        <member name="M:RespuestasRamon._Ready">
            <summary>
            Esta funcion se llama automaticamente cuando se instancia el objeto al cual esta asociado el script
            </summary>
        </member>
        <member name="M:RespuestasRamon._on_mouse_entered">
            <summary>
            Señal de godot que nos permite saber cuando el raton entra en el area de un objeto
            </summary>
        </member>
        <member name="M:RespuestasRamon._on_mouse_exited">
            <summary>
            Señal de godot que nos permite saber cuando el raton sale en el area de un objeto
            </summary>
        </member>
        <member name="M:RespuestasRamon._on_input_event(Godot.Node,Godot.InputEvent,System.Int64)">
            <summary>
            Este metodo es una señal del propio godot que nos permite detectar cuando haces click sobre le objeto
            </summary>
            <param name="viewport">Nodo del objeto parte de la API</param>
            <param name="event">Nos permite detectar cuando se hace click</param>
            <param name="shape_idx">Variable que se utiliza para la API</param>
        </member>
        <member name="T:VolareMarron">
            <summary>
            Clase del pajaro Marron que controla sus movimientos, velocidad y ratio de aparicion 
            </summary>
        </member>
        <member name="M:VolareMarron._Ready">
            <summary>
            Esta funcion se llama automaticamente cuando se instancia el objeto al cual esta asociado el script
            </summary>
        </member>
        <member name="M:VolareMarron._Process(System.Double)">
            <summary>
            Este metodo esta siempre en ejecucion mientras el objeto que tiene asociado el script este en pantalla
            </summary>
            <param name="delta">Es una varibale generada por Godot que almacena la posicion del objeto</param>
        </member>
        <member name="T:VolareVerde">
            <summary>
            Clase del pajaro Verde que controla sus movimientos, velocidad y ratio de aparicion 
            </summary>
        </member>
        <member name="M:VolareVerde._Ready">
            <summary>
            Esta funcion se llama automaticamente cuando se instancia el objeto al cual esta asociado el script
            </summary>
        </member>
        <member name="M:VolareVerde._Process(System.Double)">
            <summary>
            Este metodo esta siempre en ejecucion mientras el objeto que tiene asociado el script este en pantalla
            </summary>
            <param name="delta">Es una varibale generada por Godot que almacena la posicion del objeto</param>
        </member>
        <member name="T:MainDesvan">
            <summary>
            Escript que nos permite gestionar como funciona la escena 3
            </summary>
        </member>
        <member name="T:Unicornio">
            <summary>
            Script que comparten todos los unicornios que nos permite gestionar que no se muevan al mismo tiempo y que hagan su funcion en el ritual
            </summary>
        </member>
        <member name="M:Unicornio._Process(System.Double)">
            <summary>
            Este metodo esta siempre en ejecucion mientras el objeto que tiene asociado el script este en pantalla
            </summary>
            <param name="delta">Es una varibale generada por Godot que almacena la posicion del objeto</param>
        </member>
        <member name="M:Unicornio._on_input_event(Godot.Node,Godot.InputEvent,System.Int32)">
            <summary>
            Este metodo es una señal del propio godot que nos permite detectar cuando haces click sobre le objeto
            </summary>
            <param name="viewport">Nodo del objeto parte de la API</param>
            <param name="evento">Nos permite detectar cuando se hace click</param>
            <param name="shap">Variable que se utiliza para la API</param>
        </member>
        <member name="T:GuardarEscena">
            <summary>
            Clase que nos permite guardar la artida
            </summary>
        </member>
        <member name="M:GuardarEscena._Ready">
            <summary>
            Called when the node enters the scene tree for the first time.
            </summary>
        </member>
        <member name="M:GuardarEscena._Process(System.Double)">
            <summary>
            Called every frame. 'delta' is the elapsed time since the previous frame.
            </summary>
            <param name="delta"></param>
        </member>
        <member name="M:GuardarEscena.SaveGame(Godot.Node)">
            <summary>
            Metodo que nos permite guardar las escenas
            </summary>
            <param name="tree">Esta variable es el tree de las escenas</param>
        </member>
        <member name="M:GuardarEscena.LoadGame">
            <summary>
            Note: This can be called from anywhere inside the tree. This function is
            path independent.
            </summary>
        </member>
        <member name="T:MenuPrincipal">
            <summary>
            Clase que gestiona todo el menu principal
            </summary>
        </member>
        <member name="M:MenuPrincipal._Ready">
            <summary>
            Called when the node enters the scene tree for the first time.
            </summary>
        </member>
        <member name="M:MenuPrincipal._onNewGameButtonPressed">
            <summary>
            Función llamada cuando se presiona el botón de "Nuevo Juego"
            </summary>
        </member>
        <member name="M:MenuPrincipal._onLoadGameButtonPressed">
            <summary>
            Función llamada cuando se presiona el botón de "Cargar Juego"
            </summary>
        </member>
        <member name="M:MenuPrincipal._onSettingsButtonPressed">
            <summary>
            Función llamada cuando se presiona el botón de "Configuración"
            </summary>
        </member>
        <member name="M:MenuPrincipal._onExitButtonPressed">
            <summary>
            Función llamada cuando se presiona el botón de "Salir"
            </summary>
        </member>
        <member name="T:MenuOpciones">
            <summary>
            Clase que gestiona el menudo de opcines del menu principal
            </summary>
        </member>
        <member name="M:MenuOpciones._Ready">
            <summary>
            Esta funcion se llama automaticamente cuando se instancia el objeto al cual esta asociado el script
            </summary>
        </member>
        <member name="M:MenuOpciones._Process(System.Double)">
            <summary>
            Este metodo esta siempre en ejecucion mientras el objeto que tiene asociado el script este en pantalla
            </summary>
            <param name="delta">Es una varibale generada por Godot que almacena la posicion del objeto</param>
        </member>
        <member name="M:MenuOpciones._on_color_rect_animation_finished">
            <summary>
            Es una señal de godot que se auto llama cuando la animacion vinculada a esta señal llega a su fin
            </summary>
        </member>
        <member name="M:MenuOpciones._on_exit_pressed">
            <summary>
            Señal de godot que se activa sola cuando haces click en el boton vinculado
            </summary>
        </member>
        <member name="M:MenuOpciones._on_volumen_master_value_changed(System.Single)">
            <summary>
            Metodo que nos permite cambiar el porcentaje de sonido del buffer master
            </summary>
            <param name="volumen">Parametro de volumen deseado</param>
        </member>
        <member name="M:MenuOpciones._on_volumen_vfx_value_changed(System.Single)">
            <summary>
            Metodo que nos permite cambiar el porcentaje de sonido del buffer efectos de sonido
            </summary>
            <param name="volumen">Parametro de volumen deseado</param>
        </member>
        <member name="M:MenuOpciones._on_volumen_musica_value_changed(System.Single)">
            <summary>
            Metodo que nos permite cambiar el porcentaje de sonido del buffer musica
            </summary>
            <param name="volumen">Parametro de volumen deseado</param>
        </member>
        <member name="M:MenuOpciones.setPantalla(System.Boolean)">
            <summary>
            Setter de pantalla
            </summary>
            <param name="s">Cambia el bool de pantalla</param>
        </member>
        <member name="M:MenuOpciones.AddResolutionToButton">
            <summary>
            Metodo que nos permite gestionar el cambio de resolucion
            </summary>
        </member>
        <member name="M:MenuOpciones.Save">
            <summary>
            Metodo que guarda las opciones elegidas por el usuario
            </summary>
        </member>
        <member name="M:MenuOpciones._on_button_pressed">
            <summary>
            Señal de godot que se activa sola cuando haces click en el boton vinculado
            </summary>
        </member>
        <member name="M:MenuOpciones._on_option_button_item_selected(System.Int32)">
            <summary>
            Metodo que gestiona el desplegable de resoluciones y aplica la resolucion seleccionada
            </summary>
            <param name="mySelectedRez">Cambia la resolucion actual</param>
        </member>
        <member name="M:MenuOpciones.ApplyGameDataVideoSettings">
            <summary>
            Metodo que aplica todos los cambios en el juego
            </summary>
        </member>
        <member name="T:Video_settings">
            <summary>
            Menu de las opciones de video del juego
            </summary>
        </member>
        <member name="M:Video_settings.setPantalla(System.Boolean)">
            <summary>
            Setter de pantalla
            </summary>
            <param name="s">Cambia el bool de pantalla</param>
        </member>
        <member name="M:Video_settings._Ready">
            <summary>
            Esta funcion se llama automaticamente cuando se instancia el objeto al cual esta asociado el script
            </summary>
        </member>
        <member name="M:Video_settings._Process(System.Double)">
            <summary>
            Este metodo esta siempre en ejecucion mientras el objeto que tiene asociado el script este en pantalla
            </summary>
            <param name="delta">Es una varibale generada por Godot que almacena la posicion del objeto</param>
        </member>
        <member name="M:Video_settings.AddResolutionToButton">
            <summary>
            Metodo que nos permite gestionar el cambio de resolucion
            </summary>
        </member>
        <member name="M:Video_settings.Save">
            <summary>
            Metodo que guarda las opciones elegidas por el usuario
            </summary>
        </member>
        <member name="M:Video_settings._on_button_pressed">
            <summary>
            Señal de godot que se activa sola cuando haces click en el boton vinculado
            </summary>
        </member>
        <member name="M:Video_settings._on_option_button_item_selected(System.Int32)">
            <summary>
            Metodo que gestiona el desplegable de resoluciones y aplica la resolucion seleccionada
            </summary>
            <param name="mySelectedRez">Cambia la resolucion actual</param>
        </member>
        <member name="M:Video_settings.ApplyGameDataVideoSettings">
            <summary>
            Metodo que aplica todos los cambios en el juego
            </summary>
        </member>
        <member name="M:Video_settings._on_exit_pressed">
            <summary>
            Metodo que nos permite gestionar cuando alguien le da al boton de exit
            </summary>
        </member>
        <member name="T:Volumen_settings">
            <summary>
            Clase que gestiona las opciones de sonido
            </summary>
        </member>
        <member name="M:Volumen_settings._Ready">
            <summary>
            Esta funcion se llama automaticamente cuando se instancia el objeto al cual esta asociado el script
            </summary>
        </member>
        <member name="M:Volumen_settings._on_volumen_master_value_changed(System.Single)">
            <summary>
            Metodo que nos permite cambiar el porcentaje de sonido del buffer master
            </summary>
            <param name="volumen">Parametro de volumen deseado</param>
        </member>
        <member name="M:Volumen_settings._on_volumen_vfx_value_changed(System.Single)">
            <summary>
            Metodo que nos permite cambiar el porcentaje de sonido del buffer efectos de sonido
            </summary>
            <param name="volumen">Parametro de volumen deseado</param>
        </member>
        <member name="M:Volumen_settings._on_volumen_musica_value_changed(System.Single)">
            <summary>
            Metodo que nos permite cambiar el porcentaje de sonido del buffer musica
            </summary>
            <param name="volumen">Parametro de volumen deseado</param>
        </member>
        <member name="T:MenuDePausa">
            <summary>
            Clase que nos permite gestionar el menu de pausa dentro del juego
            </summary>
        </member>
        <member name="M:MenuDePausa._Process(System.Double)">
            <summary>
            Este metodo esta siempre en ejecucion mientras el objeto que tiene asociado el script este en pantalla
            </summary>
            <param name="delta">Es una varibale generada por Godot que almacena la posicion del objeto</param>
        </member>
        <member name="M:MenuDePausa._on_continuar_pressed">
            <summary>
            Metodo que se llama cuando clickas el boton de continuar
            </summary>
        </member>
        <member name="M:MenuDePausa._on_opciones_pressed">
            <summary>
            Metodo que se llama cuando clickas el boton de opciones y las muestra en pantalla 
            </summary>
        </member>
        <member name="M:MenuDePausa._on_salir_al_menu_principal_pressed">
            <summary>
            Metodo que se activa cuando pulsas el boton de salir al menu y te lleva a el
            </summary>
        </member>
        <member name="M:MenuDePausa._on_exit_pressed">
            <summary>
            Metodo del boton exit de la pestaña de ajustes
            </summary>
        </member>
    </members>
</doc>
